<%- include('../layouts/header.ejs')%>



  <!-- Section: Design Block -->
  <!-- <section class="bodyoflogin d-flex justify-content-center align-items-center">
  
  
    <div class="container px-4 py-5 px-md-5 text-center text-lg-start">
      <div class="row gx-lg-5 align-items-center">
        <div class="col-lg-6 mb-3 mb-lg-0" style="z-index: 10">
          <a class="navbar-brand logo-size-bgremoved" href="/home">
            <img src="assets/logos/bgRemInvLogo.png" alt="Thriffy" />
          </a>
          <p class="mb-2 opacity-70" style="color: hsl(218, 81%, 85%)"></p>
        </div>
  
        <div class="col-lg-6 mb-3 mb-lg-0 position-relative">
          <div id="radius-shape-1" class="position-absolute rounded-circle shadow-5-strong"></div>
          <div id="radius-shape-2" class="position-absolute shadow-5-strong"></div>
  
          <div class="card bg-glass">
            <div class="card-body px-md-3">
              <form action="/register" method="post" onsubmit="return validateForm()" novalidate>
                <div class="row gx-2">
                  <div class="col-md-6 mb-2">
                    <div class="form-outline">
                      <input class="form-control" type="text" id="fname" name="fname" value="<% if(typeof currentValue !=='undefined' ){%><%= currentValue.fname %><%}else{ }%>" required />
                      <label class="form-label text-dark" for="fname">First name</label>
                      <p class="form-label text-danger"> <% if(typeof msgFname !=='undefined' ){%><%= msgFname %><%}%> </p>
                    </div>
                  </div>
                  <div class="col-md-6 mb-2">
                    <div class="form-outline">
                      <input class="form-control" type="text" id="lname" name="lname" value="<% if(typeof currentValue !=='undefined' ){%><%= currentValue.lname %><%}else{ }%>" required />
                      <label class="form-label text-dark" for="lname">Last name</label>
                      <p class="form-label text-danger"> <% if(typeof msgLname !=='undefined' ){%><%= msgLname %><%}%> </p>
                    </div>
                  </div>
                </div>
  
                <div class="form-outline">
                  <input class="form-control" type="email" id="email" name="email" value="<% if(typeof currentValue !=='undefined' ){%><%= currentValue.email %><%}else{ }%>" required />
                  <label class="form-label text-dark" for="email">Email address </label>
                </div>
                <span id="error-message" class="alert text-center text-danger" role="alert" style="display: none; height: 20px;">Invalid email address</span>
  
                <div class="form-outline mb-2">
                  <input class="form-control" type="text" id="mobile" name="mobile" placeholder="<% if(typeof msgMobile !=='undefined' ){%><%= msgMobile %><%}else{ }%>" value="<% if(typeof currentValue !=='undefined' ){%><%= currentValue.mobile %><%}else{ }%>" required />
                  <label class="form-label text-dark" for="mobile">Enter Mobile</label>
                  <p class="form-label text-danger"> <% if(typeof msgMobile !=='undefined' ){%><%= msgMobile %><%}%> </p>
                </div>
  
                <div class="form-outline mb-2">
                  <input class="form-control" type="password" id="password" name="password" value="<% if(typeof currentValue !=='undefined' ){%><%= currentValue.password %><%}else{ }%>" required />
                  <label class="form-label text-dark" for="password">Password</label>
                  <p class="form-label text-danger"> <% if(typeof msgPassword !=='undefined' ){%><%= msgPassword %><%}%> </p>
                </div>
  
                <div class="form-outline mb-2">
                  <input class="form-control" type="password" id="cpassword" name="cpassword" value="<% if(typeof currentValue !=='undefined' ){%><%= currentValue.cpassword %><%}else{ }%>" required />
                  <label class="form-label text-dark" for="cpassword">Confirm Password</label>
                </div>
  
                <input type="hidden">
  
                <% if(typeof msgPass !=='undefined' ){ %>
                  <div class="alert alert-danger text-center text-white" role="alert">
                    <%= msgPass %>
                  </div>
                <% } %>
  
                <% if(typeof msgName !=='undefined' ){ %>
                  <div class="alert alert-danger text-center text-white" role="alert">
                    <%= msgPass %>
                  </div>
                <% } %>
  
                <% if(typeof message !=='undefined' ){ %>
                  <div class="alert alert-success text-center " role="alert">
                    <%= message %>
                  </div>
                  <p>
                    <a class="d-flex justify-content-center text-dark" href="/login">login here</a>
                  </p>
                <% } %>
  
                <div class="d-grid gap-2">
                  <button class="btn btn-dark" type="submit" value="Register">Register</button>
                </div>
  
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section> -->
  
  <!-- Section: Design Block -->


  <!-- TESTINGGGGGG -->
  <style>

$yellow:#f5ba1a;
$black:#000000;
$grey:#cccccc;


body {
	font-family: Verdana, Geneva, sans-serif;
	font-size: 14px;
	background: #813a3a;
  
}
.clearfix {
	&:after {
		content: "";
		display: block;
		clear: both;
		visibility: hidden;
		height: 0;
	}
}
.form_wrapper {
	background: #ffffff;
	width: 400px;
	max-width: 100%;
	box-sizing: border-box;
	padding: 25px;
	/* margin: 8% auto 0; */
	position: relative;
	z-index: 1;
	border-top: 5px solid $yellow;
	-webkit-box-shadow: 0 0 3px rgba(0, 0, 0, 0.1);
	-moz-box-shadow: 0 0 3px rgba(0, 0, 0, 0.1);
	box-shadow: 0 0 3px rgba(0, 0, 0, 0.1);
    -webkit-transform-origin: 50% 0%;
    transform-origin: 50% 0%;
    -webkit-transform: scale3d(1, 1, 1);
    transform: scale3d(1, 1, 1);
    -webkit-transition: none;
    transition: none;
    -webkit-animation: expand 0.8s 0.6s ease-out forwards;
    animation: expand 0.8s 0.6s ease-out forwards;
    opacity: 0;
	h2 {
		font-size: 1.5em;
		line-height: 1.5em;
		margin: 0;
	}
	.title_container {
		text-align: center;
		padding-bottom: 15px;
	}
	h3 {
		font-size: 1.1em;
		font-weight: normal;
		line-height: 1.5em;
		margin: 0;
	}
    label {
        font-size: 12px;
    }
	.row {
		margin: 10px -15px;
		>div {
			padding: 0 15px;
			box-sizing: border-box;
		}
	}
	.col_half {
		width: 50%;
		float: left;
	}
	.input_field {
		position: relative;
		margin-bottom: 20px;
        -webkit-animation: bounce 0.6s ease-out;
  	     animation: bounce 0.6s ease-out;
		>span {
			position: absolute;
			left: 0;
			top: 0;
			color: #333;
			height: 100%;
			border-right: 1px solid $grey;
			text-align: center;
			width: 30px;
			>i {
				padding-top: 10px;
			}
		}
	}
	.textarea_field {
		>span {
			>i {
				padding-top: 10px;
			}
		}
	}
	input {
    &[type="text"], &[type="email"], &[type="password"] {
      width: 100%;
      padding: 8px 10px 9px 35px;
      height: 35px;
      border: 1px solid $grey;
      box-sizing: border-box;
      outline: none;
      -webkit-transition: all 0.30s ease-in-out;
      -moz-transition: all 0.30s ease-in-out;
      -ms-transition: all 0.30s ease-in-out;
      transition: all 0.30s ease-in-out;
    }
    &[type="text"]:hover, &[type="email"]:hover, &[type="password"]:hover {
      background: #fafafa;
    }
    &[type="text"]:focus, &[type="email"]:focus, &[type="password"]:focus {
      -webkit-box-shadow: 0 0 2px 1px rgba(255, 169, 0, 0.5);
      -moz-box-shadow: 0 0 2px 1px rgba(255, 169, 0, 0.5);
      box-shadow: 0 0 2px 1px rgba(255, 169, 0, 0.5);
      border: 1px solid $yellow;
      background: #fafafa;
    }
    &[type="submit"] {
		background: $yellow;
		height: 35px;
		line-height: 35px;
		width: 100%;
		border: none;
		outline: none;
		cursor: pointer;
		color: #fff;
		font-size: 1.1em;
		margin-bottom: 10px;
		-webkit-transition: all 0.30s ease-in-out;
		-moz-transition: all 0.30s ease-in-out;
		-ms-transition: all 0.30s ease-in-out;
		transition: all 0.30s ease-in-out;
		&:hover {
			background: darken($yellow,7%);
		}
		&:focus {
			background: darken($yellow,7%);
		}
	}    
    &[type="checkbox"], &[type="radio"] {
      border: 0;
      clip: rect(0 0 0 0);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px;
    }
  }
}
.form_container {
	.row {
		.col_half.last {
			border-left: 1px solid $grey;
		}
	}
}
.checkbox_option{
    label{
        margin-right: 1em;
        position: relative;
        &:before {
          content: "";
          display: inline-block;
          width: 0.5em;
          height: 0.5em;
          margin-right: 0.5em;
          vertical-align: -2px;
          border: 2px solid $grey;
          padding: 0.12em;
          background-color: transparent;
          background-clip: content-box;
          transition: all 0.2s ease;
        }
        &:after {
          border-right: 2px solid $black;
          border-top: 2px solid $black;
          content: "";
          height: 20px;
          left: 2px;
          position: absolute;
          top: 7px;
          transform: scaleX(-1) rotate(135deg);
          transform-origin: left top;
          width: 7px;
          display: none;
        }
    }
    input {
    &:hover + label:before {
      border-color: $black;
    }
    &:checked + label {
      &:before {
        border-color: $black;
      }
      &:after {
        -moz-animation: check 0.8s ease 0s running;
        -webkit-animation: check 0.8s ease 0s running;
        animation: check 0.8s ease 0s running;
        display: block;
        width: 7px;
        height: 20px;
        border-color: $black;
      }
    }
  }
}
.radio_option {
  label {
      margin-right: 1em;
    &:before {
      content: "";
      display: inline-block;
      width: 0.5em;
      height: 0.5em;
      margin-right: 0.5em;
      border-radius: 100%;
      vertical-align: -3px;
      border: 2px solid $grey;
      padding: 0.15em;
      background-color: transparent;
      background-clip: content-box;
      transition: all 0.2s ease;
    }
  }
  input {
    &:hover + label:before {
      border-color: $black;
    }
    &:checked + label:before {
      background-color: $black;
      border-color: $black;
    }
  }
}
.select_option {
  position: relative;
  width: 100%;
  select {
    display: inline-block;
    width: 100%;
    height: 35px;
    padding: 0px 15px;
    cursor: pointer;
    color: #7b7b7b;
    border: 1px solid $grey;
    border-radius: 0;
    background: #fff;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    transition: all 0.2s ease;
    &::-ms-expand {
      display: none;
    }
    &:hover, &:focus {
      color: $black;
      background: #fafafa;
      border-color: $black;
      outline: none;
    }
  }
}
.select_arrow {
  position: absolute;
  top: calc(50% - 4px);
  right: 15px;
  width: 0;
  height: 0;
  pointer-events: none;
  border-width: 8px 5px 0 5px;
  border-style: solid;
  border-color: #7b7b7b transparent transparent transparent;
}

.select_option select {
  &:hover + .select_arrow, &:focus + .select_arrow {
    border-top-color: $black;
  }
}
.credit {
	position: relative;
	z-index: 1;
	text-align: center;
	padding: 15px;
	color: $yellow;
	a {
		color: darken($yellow,7%);
	}
}
@-webkit-keyframes check {
  0% { height: 0; width: 0; }
  25% { height: 0; width: 7px; }
  50% { height: 20px; width: 7px; }
}

@keyframes check {
  0% { height: 0; width: 0; }
  25% { height: 0; width: 7px; }
  50% { height: 20px; width: 7px; }
}

@-webkit-keyframes expand { 
	0% { -webkit-transform: scale3d(1,0,1); opacity:0; }
	25% { -webkit-transform: scale3d(1,1.2,1); }
	50% { -webkit-transform: scale3d(1,0.85,1); }
	75% { -webkit-transform: scale3d(1,1.05,1); }
	100% { -webkit-transform: scale3d(1,1,1);  opacity:1; }
}

@keyframes expand { 
	0% { -webkit-transform: scale3d(1,0,1); transform: scale3d(1,0,1);  opacity:0; }
	25% { -webkit-transform: scale3d(1,1.2,1); transform: scale3d(1,1.2,1); }
	50% { -webkit-transform: scale3d(1,0.85,1); transform: scale3d(1,0.85,1); }
	75% { -webkit-transform: scale3d(1,1.05,1); transform: scale3d(1,1.05,1); }
	100% { -webkit-transform: scale3d(1,1,1); transform: scale3d(1,1,1);  opacity:1; }
}


@-webkit-keyframes bounce { 
	0% { -webkit-transform: translate3d(0,-25px,0); opacity:0; }
	25% { -webkit-transform: translate3d(0,10px,0); }
	50% { -webkit-transform: translate3d(0,-6px,0); }
	75% { -webkit-transform: translate3d(0,2px,0); }
	100% { -webkit-transform: translate3d(0,0,0); opacity: 1; }
}

@keyframes bounce { 
	0% { -webkit-transform: translate3d(0,-25px,0); transform: translate3d(0,-25px,0); opacity:0; }
	25% { -webkit-transform: translate3d(0,10px,0); transform: translate3d(0,10px,0); }
	50% { -webkit-transform: translate3d(0,-6px,0); transform: translate3d(0,-6px,0); }
	75% { -webkit-transform: translate3d(0,2px,0); transform: translate3d(0,2px,0); }
	100% { -webkit-transform: translate3d(0,0,0); transform: translate3d(0,0,0); opacity: 1; }
}
@media (max-width: 600px) {
	.form_wrapper {
		.col_half {
			width: 100%;
			float: none;
		}
	}
	.bottom_row {
		.col_half {
			width: 50%;
			float: left;
		}
	}
	.form_container {
		.row {
			.col_half.last {
				border-left: none;
			}
		}
	}
	.remember_me {
		padding-bottom: 20px;
	}
}
  </style>
  
  <section class="bodyoflogin d-flex justify-content-center align-items-center" >
  
  <div class="form_wrapper">
    <div class="form_container">
      <div class="title_container">
        <h2>Register Now !</h2>
      </div>
      <div class="row clearfix">
        <div class="">
          <form action="/register" method="post" onsubmit="return validateForm()"  novalidate>
            
            <!-- email address -->
            <div class="input_field"> <span><i aria-hidden="true" class="fa fa-envelope"></i></span>
              <input type="email" name="email" id="email" placeholder="Email" required />
            </div>
              <!-- email address -->
            

<!-- first last name -->
             <div class="row clearfix">

              <div class="col_half">
                <div class="input_field"> <span><i aria-hidden="true" class="fa fa-user"></i></span>
                  <input type="text" id="fname" name="fname" placeholder="First Name" required/>
                </div>
              </div>

              <div class="col_half">
                <div class="input_field"> <span><i aria-hidden="true" class="fa fa-user"></i></span>
                  <input type="text" id="lname" name="lname" placeholder="Last Name" required />
                </div>
              </div>
              
            </div>
<!-- first last name -->


<!-- mobile -->
<div class="input_field">
  <span><i aria-hidden="true" class="fa fa-mobile"></i></span>
  <input type="text" id="mobile" name="mobile" placeholder="Mobile Number" required />
</div>
<!-- mobile -->
            

<!-- password -->
            <div class="input_field"> <span><i aria-hidden="true" class="fa fa-lock"></i></span>
              <input type="password" id="password" name="password" placeholder="Password" required />
            </div>
            

            <div class="input_field"> <span><i aria-hidden="true" class="fa fa-lock"></i></span>
              <input  type="password" id="cpassword" name="cpassword" placeholder="Re-type Password" required />
            </div>
            
              
            <input class="button btn-dark" type="submit" value="Register" />
          </form>
        </div>
      </div>
    </div>
  </div>
  
  </section>

<script>

function validateForm() {
  const emailInput = document.getElementById('email');
  const errorMessage = document.getElementById('error-message');

  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  const isValidEmail = emailRegex.test(emailInput.value);

  if (!isValidEmail) {
    const Toast = Swal.mixin({
      toast: true,
      position: "top-end",
      showConfirmButton: false,
      timer: 3000,
      timerProgressBar: true,
      didOpen: (toast) => {
        toast.onmouseenter = Swal.stopTimer;
        toast.onmouseleave = Swal.resumeTimer;
      }
    });
    Toast.fire({
      icon: "error",
      title: "Enter a valid mail address"
    });
    return false;
  }

  
  if (!validateFirstName()) {
    return false;
  }
  if (!validateLastName()) {
    return false;
  }
  if (!validateMobileNumber()) {
    return false;
  }
  if (!validatePassword()) {
    return false;
  }
  if (!validateConfirmPassword()) {
    return false;
  }

  

  return true;
}




    //validation for fname
    function validateFirstName() {
    const fnameInput = document.getElementById('fname');
    const fnamePattern = /^[A-Za-z]+$/;

    if (fnamePattern.test(fnameInput.value)) {
      return true
      
    } else {
      const Toast = Swal.mixin({
              toast: true,
              position: "top-end",
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true,
              didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
              }
            });
            Toast.fire({
              icon: "error",
              title: "Enter a valid first name"
            });
            return false;
    }
  }


  //validation for lname
  function validateLastName() {
    const lnameInput = document.getElementById('lname');
    const lnamePattern = /^[A-Za-z]+$/;
    if (lnamePattern.test(lnameInput.value)) {
      return true
      
    } else {
      const Toast = Swal.mixin({
              toast: true,
              position: "top-end",
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true,
              didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
              }
            });
            Toast.fire({
              icon: "error",
              title: "Enter a valid last name"
            });
            return false;
    }
  }

// Validation for mobile number
  function validateMobileNumber() {
    const mobileInput = document.getElementById('mobile')
    const mobilePattern = /^\d{10}$/;

    if(mobilePattern.test(mobileInput.value)){
      return true
    }else{
      const Toast = Swal.mixin({
              toast: true,
              position: "top-end",
              showConfirmButton: false,
              timer: 3000,
              timerProgressBar: true,
              didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
              }
            });
            Toast.fire({
              icon: "error",
              title: "Enter a valid mobile number"
            });
            return false;
    }
    
  }


  //valiodation for password
  function validatePassword() {
  const passwordInput = document.getElementById('password');

 
  if (passwordInput.value.length <= 5) {
    const Toast = Swal.mixin({
      toast: true,
      position: 'top-end',
      showConfirmButton: false,
      timer: 3000,
      timerProgressBar: true,
      didOpen: (toast) => {
        toast.onmouseenter = Swal.stopTimer;
        toast.onmouseleave = Swal.resumeTimer;
      }
    });

    Toast.fire({
      icon: 'error',
      title: 'Password should be more than 5 characters'
    });

    return false; 
  }

  // Checking if the password contains spaces
  if (/\s/.test(passwordInput.value)) {
    const Toast = Swal.mixin({
      toast: true,
      position: 'top-end',
      showConfirmButton: false,
      timer: 3000,
      timerProgressBar: true,
      didOpen: (toast) => {
        toast.onmouseenter = Swal.stopTimer;
        toast.onmouseleave = Swal.resumeTimer;
      }
    });

    Toast.fire({
      icon: 'error',
      title: 'Password should not contain spaces'
    });

    return false; 
  }
  return true;
}

//validation for password match
function validateConfirmPassword() {
  const passwordInput = document.getElementById('password');
  const confirmPasswordInput = document.getElementById('cpassword');

  // Check if the passwords match
  if (passwordInput.value !== confirmPasswordInput.value) {
    const Toast = Swal.mixin({
      toast: true,
      position: 'top-end',
      showConfirmButton: false,
      timer: 3000,
      timerProgressBar: true,
      didOpen: (toast) => {
        toast.onmouseenter = Swal.stopTimer;
        toast.onmouseleave = Swal.resumeTimer;
      }
    });

    Toast.fire({
      icon: 'error',
      title: 'Passwords do not match'
    });

    return false; 
  }
  return true;
}


</script>


  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    crossorigin="anonymous"></script>

  <%- include('../layouts/footer.ejs')%>